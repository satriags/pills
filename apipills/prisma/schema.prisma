generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model api_generate {
  id_key      String    @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  user_id     String    @db.VarChar(255)
  api_key_raw String    @db.LongText
  api_key     String?   @db.VarChar(255)
  ket         String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.DateTime(0)
  created_by  String?   @db.VarChar(255)
  updated_at  DateTime? @db.DateTime(0)
  updated_by  String?   @db.VarChar(255)
  deleted_at  DateTime? @db.DateTime(0)
  deleted_by  String?   @db.VarChar(255)
  user        user?     @relation(fields: [user_id], references: [id])
}

model api_list {
  id           String           @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  name_table   String?          @db.VarChar(255)
  select_table String?          @db.VarChar(255)
  created_at   DateTime         @default(now()) @db.DateTime(0)
  updated_at   DateTime?        @db.DateTime(0)
  deleted_at   DateTime?        @db.DateTime(0)
  active       api_list_active? @default(dbgenerated("1"))
  harga        String?          @db.VarChar(255)
  versi        String?          @db.VarChar(255)
  desc         String?          @db.VarChar(255)
  api_usage    api_usage[]
}

model api_list_selection {
  id          String                   @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  mode        api_list_selection_mode? @default(Aktif)
  user_id     String?                  @db.VarChar(255)
  id_api_list String?                  @db.VarChar(255)
  created_at  DateTime                 @default(now()) @db.DateTime(0)
  updated_at  DateTime?                @db.DateTime(0)
  deleted_at  DateTime?                @db.DateTime(0)
  created_by  String?                  @db.VarChar(255)
  updated_by  String?                  @db.VarChar(255)
  deleted_by  String?                  @db.VarChar(255)
  user        user?                    @relation(fields: [user_id], references: [id])
}

model api_quota {
  id             String            @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  user_id        String            @db.VarChar(255)
  dompet         String            @db.VarChar(255)
  created_at     DateTime          @default(now()) @db.DateTime(0)
  created_by     String?           @db.VarChar(255)
  updated_at     DateTime?         @db.DateTime(0)
  updated_by     String?           @db.VarChar(255)
  deleted_at     DateTime?         @db.DateTime(0)
  deleted_by     String?           @db.VarChar(255)
  invoice        String?           @db.VarChar(255)
  desc           String?           @db.VarChar(255)
  ip_address     String?           @db.VarChar(255)
  status         api_quota_status? @default(Pending)
  token_midtrans String?           @db.VarChar(255)
  status_desc    String?           @db.LongText
  user           user?             @relation(fields: [user_id], references: [id])
}

model api_usage {
  id          String    @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  user_id     String    @db.VarChar(255)
  harga_minus String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.DateTime(0)
  created_by  String?   @db.VarChar(255)
  updated_at  DateTime? @db.DateTime(0)
  updated_by  String?   @db.VarChar(255)
  deleted_at  DateTime? @db.DateTime(0)
  deleted_by  String?   @db.VarChar(255)
  id_api_list String?   @db.VarChar(255)
  desc        String?   @db.VarChar(255)
  ip_address  String?   @db.VarChar(255)
  id_log_web  String?   @db.VarChar(255)
  api_key     String?   @db.VarChar(255)
  user        user?     @relation(fields: [user_id], references: [id])
  api_list    api_list? @relation(fields: [id_api_list], references: [id])
}

model blog {
  id         String     @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  user_id    String?    @db.VarChar(255)
  judul      String?    @db.VarChar(500)
  slug       String?    @db.VarChar(500)
  content    String?    @db.LongText
  created_at DateTime   @default(now()) @db.DateTime(0)
  created_by String?    @db.VarChar(255)
  updated_at DateTime?  @db.DateTime(0)
  updated_by String?    @db.VarChar(255)
  deleted_at DateTime?  @db.DateTime(0)
  deleted_by String?    @db.VarChar(255)
  terlihat   String?    @default("0") @db.VarChar(255)
  type       blog_type?
  user       user?      @relation(fields: [user_id], references: [id])
}

model cities {
  id         String    @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  city_name  String?   @db.VarChar(255)
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
}

model log_login {
  id            Int       @id @default(autoincrement())
  type          String?   @db.VarChar(50)
  user_last_url String?   @db.LongText
  created_at    DateTime  @default(now()) @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  deleted_at    DateTime? @db.DateTime(0)
  created_by    String?   @db.VarChar(255)
  updated_by    String?   @db.VarChar(255)
  deleted_by    String?   @db.VarChar(255)
}

model log_web {
  id              Int       @id @default(autoincrement())
  type            String?   @db.VarChar(50)
  user_agent      String?   @db.LongText
  path            String?   @db.LongText
  ip_address      String?   @db.VarChar(50)
  browser         String?   @db.VarChar(50)
  client_os       String?   @db.VarChar(50)
  session_param   String?   @db.LongText
  post_param      String?   @db.LongText
  get_param       String?   @db.LongText
  route           String?   @db.LongText
  method          String?   @db.LongText
  user_agent_json String?   @db.LongText
  created_at      DateTime  @default(now()) @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  deleted_at      DateTime? @db.DateTime(0)
}

model migrations {
  id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  version   String @db.VarChar(255)
  class     String @db.VarChar(255)
  group     String @db.VarChar(255)
  namespace String @db.VarChar(255)
  time      Int
  batch     Int    @db.UnsignedInt
}

model product {
  id          Int       @id @default(autoincrement())
  nama_produk String?   @db.VarChar(255)
  harga       String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.DateTime(0)
  updated_at  DateTime? @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
}

model user {
  id                 String               @id @default(dbgenerated("(uuid())")) @db.VarChar(255)
  username           String?              @db.VarChar(255)
  user_nohp          String?              @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.DateTime(0)
  created_by         String?              @db.VarChar(255)
  updated_at         DateTime?            @db.DateTime(0)
  updated_by         String?              @db.VarChar(255)
  deleted_at         DateTime?            @db.DateTime(0)
  deleted_by         String?              @db.VarChar(255)
  user_last_url      String?              @db.LongText
  role               user_role?           @default(User)
  api_generate       api_generate[]
  api_usage          api_usage[]
  api_list_selection api_list_selection[]
  blog               blog[]
  api_quota          api_quota[]
}

enum api_list_selection_mode {
  Aktif
  Tidak_Aktif @map("Tidak Aktif")
}

enum api_list_active {
  Inactive @map("0")
  Active   @map("1")
}

enum user_role {
  User
  Admin
}

enum api_quota_status {
  Berhasil
  Pending
  Batal
}

enum blog_type {
  Blog
  Documentation
}
